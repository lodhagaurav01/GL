/*\\Given an array A of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list (including duplicates).  For example, if a character occurs 3 times in all strings but not 4 times, you need to include that character three times in the final answer.

You may return the answer in any order.

 

Example 1:

Input: ["bella","label","roller"]
Output: ["e","l","l"]
Example 2:

Input: ["cool","lock","cook"]
Output: ["c","o"]
 

Note:

1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j] is a lowercase letter

*/

class Solution:
    def commonChars(self, A: List[str]) -> List[str]:
        res = []
        
        for code in range(97, 123):
            num = float("inf")
            for string in A:
                num = min(num, string.count(chr(code)))
                if num == 0:
                    break
            
            for _ in range(num):
                res.append(chr(code))

        return res
             
======================================================================


from collections import Counter

class Solution:
    def commonChars(self, A: List[str]) -> List[str]:
        return sum([[letter] * count for letter, count in reduce(lambda a, b: {i: min(a[i], b.get(i, 0)) for i in a}, [Counter(i) for i in A]).items()], [])
        
        
==============================================================================

