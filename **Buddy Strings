/*
Given two strings A and B of lowercase letters, return true if you can swap two letters in A so the result is equal to B, otherwise, return false.

Swapping letters is defined as taking two indices i and j (0-indexed) such that i != j and swapping the characters at A[i] and A[j]. For example, swapping at indices 0 and 2 in "abcd" results in "cbad".

 

Example 1:

Input: A = "ab", B = "ba"
Output: true
Explanation: You can swap A[0] = 'a' and A[1] = 'b' to get "ba", which is equal to B.
Example 2:

Input: A = "ab", B = "ab"
Output: false
Explanation: The only letters you can swap are A[0] = 'a' and A[1] = 'b', which results in "ba" != B.
Example 3:

Input: A = "aa", B = "aa"
Output: true
Explanation: You can swap A[0] = 'a' and A[1] = 'a' to get "aa", which is equal to B.
Example 4:

Input: A = "aaaaaaabc", B = "aaaaaaacb"
Output: true
Example 5:

Input: A = "", B = "aa"
Output: false
 

Constraints:

0 <= A.length <= 20000
0 <= B.length <= 20000
A and B consist of lowercase letters.
*/









def buddyStrings(self, A, B):
  
        if len(A) != len(B):
            return False
        
        if A == B:
            return len(A) - len(set(A)) >= 1
        
        swap = 0
        temp = []
        for index in range(len(A)):
            
            if A[index] != B[index]:
                swap+=1
                temp.append(index)
           
            if swap > 2:
                return False
        
        return False if swap == 1 else A[temp[0]] == B[temp[1]] and A[temp[1]] == B[temp[0]]
        
        
        -------------------------------------------------------------------------------------------
        
        
        class Solution {
public:
    bool buddyStrings(string A, string B) {
        if(A.size()!=B.size()) return false;
        vector<int> hold;
        vector<int> arr(26,0);
        for(int i=0;i<A.size();i++){
            arr[A[i]-'a']++;
            if(A[i]!=B[i]){
                hold.push_back(i);
            }
        }
        if(hold.size()==0){
            for(int i=0;i<26;i++){
                if(arr[i]>=2){
                    return true;
                }
            }
            return false;
        }
        if(hold.size()!=2) return false;
        swap(A[hold[0]],A[hold[1]]);
        if(A==B)return true;
        return false;
    }
};

===========================================================================
