'''
Given an array of integers nums.

A pair (i,j) is called good if nums[i] == nums[j] and i < j.

Return the number of good pairs.

 

Example 1:

Input: nums = [1,2,3,1,1,3]
Output: 4
Explanation: There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.
Example 2:

Input: nums = [1,1,1,1]
Output: 6
Explanation: Each pair in the array are good.
Example 3:

Input: nums = [1,2,3]
Output: 0
 

Constraints:

1 <= nums.length <= 100
1 <= nums[i] <= 100
'''

#HINT:Count how many times each number appears. If a number appears n times, then n * (n â€“ 1) // 2 good pairs can be made with this number.


class Solution:
    def numIdenticalPairs(self, nums: List[int]) -> int:
        d={}
        c=0
        for i in nums:
            if not i in d:
                d[i]=1
            else:
                d[i]+=1
                a=d[i]
        for i in d:
            a=d[i]
            c+=(a*(a-1))//2
        return c            
            
        
