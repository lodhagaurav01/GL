Given two arrays, write a function to compute their intersection.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Note:

Each element in the result must be unique.
The result can be in any order.

/*
class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> s_nums2(nums2.begin(), nums2.end());
	unordered_set<int> s_result;

	for(vector<int>::iterator it = nums1.begin(); it != nums1.end(); it++)
	{
		if(s_nums2.count(*it))
		{
			s_result.insert(*it);
		}
	}

	return vector<int>(s_result.begin(), s_result.end());
};
*/

#return (set([value for value in nums1 if value in nums2]))
