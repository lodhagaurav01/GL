Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number
of valid j's such that j != i and nums[j] < nums[i].

Return the answer in an array.

 

Example 1:

Input: nums = [8,1,2,2,3]
Output: [4,0,1,1,3]
Explanation: 
For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3). 
For nums[1]=1 does not exist any smaller number than it.
For nums[2]=2 there exist one smaller number than it (1). 
For nums[3]=2 there exist one smaller number than it (1). 
For nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).
Example 2:

Input: nums = [6,5,4,8]
Output: [2,1,0,3]
Example 3:

Input: nums = [7,7,7,7]
Output: [0,0,0,0]
 

Constraints:

2 <= nums.length <= 500
0 <= nums[i] <= 100



====================================================================

'''
class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        temp_nums = sorted(nums)
        result = [0] * len(nums)
        table = dict()
        i = len(temp_nums) - 1
        while i >= 0:
            if i == 0:
                table[temp_nums[i]] = 0
            elif temp_nums[i] != temp_nums[i-1]:
                table[temp_nums[i]] = i
            i -= 1
        
        for i, val in enumerate(nums):
            result[i] = table[val]
        return result
'''    
'''
class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        count = [0] * 101
        for num in nums:
            count[num] += 1
        curSum = 0
        for i in range(101):
            n = count[i]
            count[i] = curSum
            curSum += n
        result = []
        for num in nums:
            result.append(count[num])
        return result
'''
'''
class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        
        ls = {}
        for i,val in enumerate(sorted(nums)):
            if val not in ls:
                ls[val] = i
        return [ls[i] for i in nums]
'''

'''
class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        n2=sorted(nums)
        return [n2.index(n) for n in nums]
        
        
'''

'''
class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        
        d, out = {}, []
        tmp = sorted(nums)
        for i in range(len(tmp)):
            if tmp[i] not in d:
                d[tmp[i]] = i
        
        for j in range(len(nums)):
            out.append(d[nums[j]])
        
        return out
            
'''            
